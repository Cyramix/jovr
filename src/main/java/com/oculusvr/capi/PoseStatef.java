package com.oculusvr.capi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PoseStatef extends Structure {
	/** < The body's position and orientation. */
	public Posef ThePose;
	/** < The body's angular velocity in radians per second. */
	public OvrVector3f AngularVelocity;
	/** < The body's velocity in meters per second. */
	public OvrVector3f LinearVelocity;
	/** < The body's angular acceleration in radians per second per second. */
	public OvrVector3f AngularAcceleration;
	/** < The body's acceleration in meters per second per second. */
	public OvrVector3f LinearAcceleration;
	/** < Unused struct padding. */
	public float Pad;
	/** < Absolute time of this state sample. */
	public double TimeInSeconds;
	public PoseStatef() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ThePose", "AngularVelocity", "LinearVelocity", "AngularAcceleration", "LinearAcceleration", "Pad", "TimeInSeconds");
	}
	public PoseStatef(Posef ThePose, OvrVector3f AngularVelocity, OvrVector3f LinearVelocity, OvrVector3f AngularAcceleration, OvrVector3f LinearAcceleration, float Pad, double TimeInSeconds) {
		super();
		this.ThePose = ThePose;
		this.AngularVelocity = AngularVelocity;
		this.LinearVelocity = LinearVelocity;
		this.AngularAcceleration = AngularAcceleration;
		this.LinearAcceleration = LinearAcceleration;
		this.Pad = Pad;
		this.TimeInSeconds = TimeInSeconds;
	}
	public PoseStatef(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PoseStatef implements Structure.ByReference {
		
	};
	public static class ByValue extends PoseStatef implements Structure.ByValue {
		
	};
}
