package com.oculusvr.capi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class RenderAPIConfigHeader extends Structure {
	/** < The graphics API in use. */
	public int API;
	/** < Previously named RTSize. */
	public OvrSizei BackBufferSize;
	/** < The number of samples per pixel. */
	public int Multisample;
	public RenderAPIConfigHeader() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("API", "BackBufferSize", "Multisample");
	}
	public RenderAPIConfigHeader(int API, OvrSizei BackBufferSize, int Multisample) {
		super();
		this.API = API;
		this.BackBufferSize = BackBufferSize;
		this.Multisample = Multisample;
	}
	public RenderAPIConfigHeader(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends RenderAPIConfigHeader implements Structure.ByReference {
		
	};
	public static class ByValue extends RenderAPIConfigHeader implements Structure.ByValue {
		
	};
}
