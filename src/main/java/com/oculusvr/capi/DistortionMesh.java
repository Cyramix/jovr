package com.oculusvr.capi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.ShortByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class DistortionMesh extends Structure {
	/** < The distortion vertices representing each point in the mesh. */
	public com.oculusvr.capi.DistortionVertex.ByReference pVertexData;
	/** < Indices for connecting the mesh vertices into polygons. */
	public ShortByReference pIndexData;
	/** < The number of vertices in the mesh. */
	public int VertexCount;
	/** < The number of indices in the mesh. */
	public int IndexCount;
	public DistortionMesh() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pVertexData", "pIndexData", "VertexCount", "IndexCount");
	}
	public DistortionMesh(com.oculusvr.capi.DistortionVertex.ByReference pVertexData, ShortByReference pIndexData, int VertexCount, int IndexCount) {
		super();
		this.pVertexData = pVertexData;
		this.pIndexData = pIndexData;
		this.VertexCount = VertexCount;
		this.IndexCount = IndexCount;
	}
	public DistortionMesh(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends DistortionMesh implements Structure.ByReference {
		
	};
	public static class ByValue extends DistortionMesh implements Structure.ByValue {
		
	};
}
