package com.oculusvr.capi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class GLConfigData extends Structure {
	/** < General device settings. */
	public RenderAPIConfigHeader Header;
	/** < The optional window handle. If unset, rendering will use the current window. */
	public Pointer Window;
	/** < The optional device context. If unset, rendering will use a new context. */
	public Pointer DC;
	public GLConfigData() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("Header", "Window", "DC");
	}
	public GLConfigData(RenderAPIConfigHeader Header, Pointer Window, Pointer DC) {
		super();
		this.Header = Header;
		this.Window = Window;
		this.DC = DC;
	}
	public GLConfigData(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends GLConfigData implements Structure.ByReference {
		
	};
	public static class ByValue extends GLConfigData implements Structure.ByValue {
		
	};
}
